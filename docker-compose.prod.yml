services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      # Database configuration
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/moviedb
      - SPRING_DATASOURCE_USERNAME=movieuser
      - SPRING_DATASOURCE_PASSWORD=${DB_PASSWORD}
      - SPRING_JPA_HIBERNATE_DDL_AUTO=validate
      - SPRING_JPA_SHOW_SQL=false
      
      # Flyway configuration
      - SPRING_FLYWAY_ENABLED=true
      - SPRING_FLYWAY_BASELINE_ON_MIGRATE=true
      
      # JVM and memory settings
      - JAVA_OPTS=-Xms1g -Xmx2g -XX:+UseG1GC -XX:+HeapDumpOnOutOfMemoryError -XX:+UseStringDeduplication
      
      # Application specific settings
      - SPRING_PROFILES_ACTIVE=prod
      - SERVER_TOMCAT_MAX_THREADS=400
      - SERVER_TOMCAT_MIN_SPARE_THREADS=40
      - MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE=health,info,metrics
      
      # Security settings
      - SPRING_SECURITY_USER_PASSWORD=${ADMIN_PASSWORD}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - movie-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 2.5G
        reservations:
          memory: 1G

  db:
    image: postgres:17.5-alpine
    restart: unless-stopped
    environment:
      - POSTGRES_DB=moviedb
      - POSTGRES_USER=movieuser
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - movie-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U movieuser -d moviedb"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

volumes:
  postgres-data:
    driver: local

networks:
  movie-network:
    driver: bridge
