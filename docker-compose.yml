services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      # Database configuration
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/moviedb
      - SPRING_DATASOURCE_USERNAME=movieuser
      - SPRING_DATASOURCE_PASSWORD=${DB_PASSWORD}
      
      # JVM settings
      - JAVA_OPTS=${JAVA_OPTS:-"-Xms512m -Xmx1024m -XX:+UseG1GC -XX:+HeapDumpOnOutOfMemoryError"}
      
      # Server settings
      - SERVER_TOMCAT_MAX_THREADS=${SERVER_TOMCAT_MAX_THREADS:-200}
      - SERVER_TOMCAT_MIN_SPARE_THREADS=${SERVER_TOMCAT_MIN_SPARE_THREADS:-20}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - movie-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 40s

  db:
    image: postgres:17.5-alpine
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-moviedb}
      - POSTGRES_USER=${POSTGRES_USER:-movieuser}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - movie-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U movieuser -d moviedb"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres-data:

networks:
  movie-network:
    driver: bridge
